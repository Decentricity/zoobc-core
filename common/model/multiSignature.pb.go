// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.7.1
// source: model/multiSignature.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PendingTransactionStatus int32

const (
	PendingTransactionStatus_PendingTransactionPending  PendingTransactionStatus = 0
	PendingTransactionStatus_PendingTransactionExecuted PendingTransactionStatus = 1
	PendingTransactionStatus_PendingTransactionNoOp     PendingTransactionStatus = 2
	PendingTransactionStatus_PendingTransactionExpired  PendingTransactionStatus = 3
)

// Enum value maps for PendingTransactionStatus.
var (
	PendingTransactionStatus_name = map[int32]string{
		0: "PendingTransactionPending",
		1: "PendingTransactionExecuted",
		2: "PendingTransactionNoOp",
		3: "PendingTransactionExpired",
	}
	PendingTransactionStatus_value = map[string]int32{
		"PendingTransactionPending":  0,
		"PendingTransactionExecuted": 1,
		"PendingTransactionNoOp":     2,
		"PendingTransactionExpired":  3,
	}
)

func (x PendingTransactionStatus) Enum() *PendingTransactionStatus {
	p := new(PendingTransactionStatus)
	*p = x
	return p
}

func (x PendingTransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PendingTransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_model_multiSignature_proto_enumTypes[0].Descriptor()
}

func (PendingTransactionStatus) Type() protoreflect.EnumType {
	return &file_model_multiSignature_proto_enumTypes[0]
}

func (x PendingTransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PendingTransactionStatus.Descriptor instead.
func (PendingTransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{0}
}

type MultiSignatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumSignatures uint32   `protobuf:"varint,1,opt,name=MinimumSignatures,proto3" json:"MinimumSignatures,omitempty"`
	Nonce             int64    `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	MultisigAddress   string   `protobuf:"bytes,3,opt,name=MultisigAddress,proto3" json:"MultisigAddress,omitempty"`
	BlockHeight       uint32   `protobuf:"varint,4,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Latest            bool     `protobuf:"varint,5,opt,name=Latest,proto3" json:"Latest,omitempty"`
	Addresses         []string `protobuf:"bytes,6,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
}

func (x *MultiSignatureInfo) Reset() {
	*x = MultiSignatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSignatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSignatureInfo) ProtoMessage() {}

func (x *MultiSignatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSignatureInfo.ProtoReflect.Descriptor instead.
func (*MultiSignatureInfo) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{0}
}

func (x *MultiSignatureInfo) GetMinimumSignatures() uint32 {
	if x != nil {
		return x.MinimumSignatures
	}
	return 0
}

func (x *MultiSignatureInfo) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MultiSignatureInfo) GetMultisigAddress() string {
	if x != nil {
		return x.MultisigAddress
	}
	return ""
}

func (x *MultiSignatureInfo) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *MultiSignatureInfo) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

func (x *MultiSignatureInfo) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// represent the signature posted by account
type SignatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte            `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Signatures      map[string][]byte `protobuf:"bytes,2,rep,name=Signatures,proto3" json:"Signatures,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SignatureInfo) Reset() {
	*x = SignatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureInfo) ProtoMessage() {}

func (x *SignatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureInfo.ProtoReflect.Descriptor instead.
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{1}
}

func (x *SignatureInfo) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *SignatureInfo) GetSignatures() map[string][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// represent the multi signature's participant account addresses
type MultiSignatureParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiSignatureAddress string `protobuf:"bytes,1,opt,name=MultiSignatureAddress,proto3" json:"MultiSignatureAddress,omitempty"`
	AccountAddress        string `protobuf:"bytes,2,opt,name=AccountAddress,proto3" json:"AccountAddress,omitempty"`
	AccountAddressIndex   uint32 `protobuf:"varint,3,opt,name=AccountAddressIndex,proto3" json:"AccountAddressIndex,omitempty"`
	Latest                bool   `protobuf:"varint,4,opt,name=Latest,proto3" json:"Latest,omitempty"`
	BlockHeight           uint32 `protobuf:"varint,5,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
}

func (x *MultiSignatureParticipant) Reset() {
	*x = MultiSignatureParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSignatureParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSignatureParticipant) ProtoMessage() {}

func (x *MultiSignatureParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSignatureParticipant.ProtoReflect.Descriptor instead.
func (*MultiSignatureParticipant) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{2}
}

func (x *MultiSignatureParticipant) GetMultiSignatureAddress() string {
	if x != nil {
		return x.MultiSignatureAddress
	}
	return ""
}

func (x *MultiSignatureParticipant) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *MultiSignatureParticipant) GetAccountAddressIndex() uint32 {
	if x != nil {
		return x.AccountAddressIndex
	}
	return 0
}

func (x *MultiSignatureParticipant) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

func (x *MultiSignatureParticipant) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// represent the pending signature counter stored by node for multi-signature transaction
type PendingSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash []byte `protobuf:"bytes,1,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	AccountAddress  string `protobuf:"bytes,2,opt,name=AccountAddress,proto3" json:"AccountAddress,omitempty"`
	Signature       []byte `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
	BlockHeight     uint32 `protobuf:"varint,4,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Latest          bool   `protobuf:"varint,5,opt,name=Latest,proto3" json:"Latest,omitempty"`
}

func (x *PendingSignature) Reset() {
	*x = PendingSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingSignature) ProtoMessage() {}

func (x *PendingSignature) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingSignature.ProtoReflect.Descriptor instead.
func (*PendingSignature) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{3}
}

func (x *PendingSignature) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *PendingSignature) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *PendingSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *PendingSignature) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *PendingSignature) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

// represent transaction inside multisig body
type PendingTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress    string                   `protobuf:"bytes,1,opt,name=SenderAddress,proto3" json:"SenderAddress,omitempty"`
	TransactionHash  []byte                   `protobuf:"bytes,2,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	TransactionBytes []byte                   `protobuf:"bytes,3,opt,name=TransactionBytes,proto3" json:"TransactionBytes,omitempty"`
	Status           PendingTransactionStatus `protobuf:"varint,4,opt,name=Status,proto3,enum=model.PendingTransactionStatus" json:"Status,omitempty"`
	BlockHeight      uint32                   `protobuf:"varint,5,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Latest           bool                     `protobuf:"varint,6,opt,name=Latest,proto3" json:"Latest,omitempty"`
}

func (x *PendingTransaction) Reset() {
	*x = PendingTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingTransaction) ProtoMessage() {}

func (x *PendingTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingTransaction.ProtoReflect.Descriptor instead.
func (*PendingTransaction) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{4}
}

func (x *PendingTransaction) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *PendingTransaction) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *PendingTransaction) GetTransactionBytes() []byte {
	if x != nil {
		return x.TransactionBytes
	}
	return nil
}

func (x *PendingTransaction) GetStatus() PendingTransactionStatus {
	if x != nil {
		return x.Status
	}
	return PendingTransactionStatus_PendingTransactionPending
}

func (x *PendingTransaction) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *PendingTransaction) GetLatest() bool {
	if x != nil {
		return x.Latest
	}
	return false
}

type GetPendingTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderAddress string                   `protobuf:"bytes,1,opt,name=SenderAddress,proto3" json:"SenderAddress,omitempty"`
	Status        PendingTransactionStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=model.PendingTransactionStatus" json:"Status,omitempty"`
	Pagination    *Pagination              `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetPendingTransactionsRequest) Reset() {
	*x = GetPendingTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTransactionsRequest) ProtoMessage() {}

func (x *GetPendingTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetPendingTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{5}
}

func (x *GetPendingTransactionsRequest) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *GetPendingTransactionsRequest) GetStatus() PendingTransactionStatus {
	if x != nil {
		return x.Status
	}
	return PendingTransactionStatus_PendingTransactionPending
}

func (x *GetPendingTransactionsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetPendingTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of item in current page
	Count uint32 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	// Starting page
	Page uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	// content of the request
	PendingTransactions []*PendingTransaction `protobuf:"bytes,3,rep,name=PendingTransactions,proto3" json:"PendingTransactions,omitempty"`
}

func (x *GetPendingTransactionsResponse) Reset() {
	*x = GetPendingTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTransactionsResponse) ProtoMessage() {}

func (x *GetPendingTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetPendingTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{6}
}

func (x *GetPendingTransactionsResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPendingTransactionsResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPendingTransactionsResponse) GetPendingTransactions() []*PendingTransaction {
	if x != nil {
		return x.PendingTransactions
	}
	return nil
}

type GetPendingTransactionDetailByTransactionHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hex of transaction hash
	TransactionHashHex string `protobuf:"bytes,1,opt,name=TransactionHashHex,proto3" json:"TransactionHashHex,omitempty"`
}

func (x *GetPendingTransactionDetailByTransactionHashRequest) Reset() {
	*x = GetPendingTransactionDetailByTransactionHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTransactionDetailByTransactionHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTransactionDetailByTransactionHashRequest) ProtoMessage() {}

func (x *GetPendingTransactionDetailByTransactionHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTransactionDetailByTransactionHashRequest.ProtoReflect.Descriptor instead.
func (*GetPendingTransactionDetailByTransactionHashRequest) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{7}
}

func (x *GetPendingTransactionDetailByTransactionHashRequest) GetTransactionHashHex() string {
	if x != nil {
		return x.TransactionHashHex
	}
	return ""
}

type GetPendingTransactionDetailByTransactionHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PendingTransaction *PendingTransaction `protobuf:"bytes,1,opt,name=PendingTransaction,proto3" json:"PendingTransaction,omitempty"`
	PendingSignatures  []*PendingSignature `protobuf:"bytes,2,rep,name=PendingSignatures,proto3" json:"PendingSignatures,omitempty"`
	MultiSignatureInfo *MultiSignatureInfo `protobuf:"bytes,3,opt,name=MultiSignatureInfo,proto3" json:"MultiSignatureInfo,omitempty"`
}

func (x *GetPendingTransactionDetailByTransactionHashResponse) Reset() {
	*x = GetPendingTransactionDetailByTransactionHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTransactionDetailByTransactionHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTransactionDetailByTransactionHashResponse) ProtoMessage() {}

func (x *GetPendingTransactionDetailByTransactionHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTransactionDetailByTransactionHashResponse.ProtoReflect.Descriptor instead.
func (*GetPendingTransactionDetailByTransactionHashResponse) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{8}
}

func (x *GetPendingTransactionDetailByTransactionHashResponse) GetPendingTransaction() *PendingTransaction {
	if x != nil {
		return x.PendingTransaction
	}
	return nil
}

func (x *GetPendingTransactionDetailByTransactionHashResponse) GetPendingSignatures() []*PendingSignature {
	if x != nil {
		return x.PendingSignatures
	}
	return nil
}

func (x *GetPendingTransactionDetailByTransactionHashResponse) GetMultiSignatureInfo() *MultiSignatureInfo {
	if x != nil {
		return x.MultiSignatureInfo
	}
	return nil
}

type GetMultisignatureInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultisigAddress string      `protobuf:"bytes,1,opt,name=MultisigAddress,proto3" json:"MultisigAddress,omitempty"`
	Pagination      *Pagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetMultisignatureInfoRequest) Reset() {
	*x = GetMultisignatureInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultisignatureInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultisignatureInfoRequest) ProtoMessage() {}

func (x *GetMultisignatureInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultisignatureInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMultisignatureInfoRequest) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{9}
}

func (x *GetMultisignatureInfoRequest) GetMultisigAddress() string {
	if x != nil {
		return x.MultisigAddress
	}
	return ""
}

func (x *GetMultisignatureInfoRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMultisignatureInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of item in current page
	Count uint32 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	// Starting page
	Page uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	// content of the request
	MultisignatureInfo []*MultiSignatureInfo `protobuf:"bytes,3,rep,name=MultisignatureInfo,proto3" json:"MultisignatureInfo,omitempty"`
}

func (x *GetMultisignatureInfoResponse) Reset() {
	*x = GetMultisignatureInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultisignatureInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultisignatureInfoResponse) ProtoMessage() {}

func (x *GetMultisignatureInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultisignatureInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMultisignatureInfoResponse) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{10}
}

func (x *GetMultisignatureInfoResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetMultisignatureInfoResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMultisignatureInfoResponse) GetMultisignatureInfo() []*MultiSignatureInfo {
	if x != nil {
		return x.MultisignatureInfo
	}
	return nil
}

type GetMultisigAddressByParticipantAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses  []string    `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetMultisigAddressByParticipantAddressesRequest) Reset() {
	*x = GetMultisigAddressByParticipantAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultisigAddressByParticipantAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultisigAddressByParticipantAddressesRequest) ProtoMessage() {}

func (x *GetMultisigAddressByParticipantAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultisigAddressByParticipantAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetMultisigAddressByParticipantAddressesRequest) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{11}
}

func (x *GetMultisigAddressByParticipantAddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *GetMultisigAddressByParticipantAddressesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Addresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *Addresses) Reset() {
	*x = Addresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Addresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addresses) ProtoMessage() {}

func (x *Addresses) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addresses.ProtoReflect.Descriptor instead.
func (*Addresses) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{12}
}

func (x *Addresses) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetMultisigAddressByParticipantAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of item in current page
	Count uint32 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	// Starting page
	Page uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	// content of the request
	MultiSignatureAddresses map[string]*Addresses `protobuf:"bytes,3,rep,name=MultiSignatureAddresses,proto3" json:"MultiSignatureAddresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMultisigAddressByParticipantAddressesResponse) Reset() {
	*x = GetMultisigAddressByParticipantAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_multiSignature_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultisigAddressByParticipantAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultisigAddressByParticipantAddressesResponse) ProtoMessage() {}

func (x *GetMultisigAddressByParticipantAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_multiSignature_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultisigAddressByParticipantAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetMultisigAddressByParticipantAddressesResponse) Descriptor() ([]byte, []int) {
	return file_model_multiSignature_proto_rawDescGZIP(), []int{13}
}

func (x *GetMultisigAddressByParticipantAddressesResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetMultisigAddressByParticipantAddressesResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMultisigAddressByParticipantAddressesResponse) GetMultiSignatureAddresses() map[string]*Addresses {
	if x != nil {
		return x.MultiSignatureAddresses
	}
	return nil
}

var File_model_multiSignature_proto protoreflect.FileDescriptor

var file_model_multiSignature_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x1a, 0x16, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01, 0x0a, 0x12,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x3d,
	0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x01,
	0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x22, 0x83, 0x02, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x13, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x65, 0x0a, 0x33, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x48, 0x65, 0x78, 0x22,
	0x93, 0x02, 0x0a, 0x34, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x12, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x11, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x11, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69,
	0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x31, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x49,
	0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x2f, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xcb, 0x02, 0x0a, 0x30, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x17, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x17, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x5c, 0x0a, 0x1c, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x94, 0x01, 0x0a, 0x18, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x4f, 0x70, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x03, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6f, 0x6f,
	0x62, 0x63, 0x2f, 0x7a, 0x6f, 0x6f, 0x62, 0x63, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_model_multiSignature_proto_rawDescOnce sync.Once
	file_model_multiSignature_proto_rawDescData = file_model_multiSignature_proto_rawDesc
)

func file_model_multiSignature_proto_rawDescGZIP() []byte {
	file_model_multiSignature_proto_rawDescOnce.Do(func() {
		file_model_multiSignature_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_multiSignature_proto_rawDescData)
	})
	return file_model_multiSignature_proto_rawDescData
}

var file_model_multiSignature_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_model_multiSignature_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_model_multiSignature_proto_goTypes = []interface{}{
	(PendingTransactionStatus)(0),                                // 0: model.PendingTransactionStatus
	(*MultiSignatureInfo)(nil),                                   // 1: model.MultiSignatureInfo
	(*SignatureInfo)(nil),                                        // 2: model.SignatureInfo
	(*MultiSignatureParticipant)(nil),                            // 3: model.MultiSignatureParticipant
	(*PendingSignature)(nil),                                     // 4: model.PendingSignature
	(*PendingTransaction)(nil),                                   // 5: model.PendingTransaction
	(*GetPendingTransactionsRequest)(nil),                        // 6: model.GetPendingTransactionsRequest
	(*GetPendingTransactionsResponse)(nil),                       // 7: model.GetPendingTransactionsResponse
	(*GetPendingTransactionDetailByTransactionHashRequest)(nil),  // 8: model.GetPendingTransactionDetailByTransactionHashRequest
	(*GetPendingTransactionDetailByTransactionHashResponse)(nil), // 9: model.GetPendingTransactionDetailByTransactionHashResponse
	(*GetMultisignatureInfoRequest)(nil),                         // 10: model.GetMultisignatureInfoRequest
	(*GetMultisignatureInfoResponse)(nil),                        // 11: model.GetMultisignatureInfoResponse
	(*GetMultisigAddressByParticipantAddressesRequest)(nil),      // 12: model.GetMultisigAddressByParticipantAddressesRequest
	(*Addresses)(nil),                                            // 13: model.addresses
	(*GetMultisigAddressByParticipantAddressesResponse)(nil),     // 14: model.GetMultisigAddressByParticipantAddressesResponse
	nil,                // 15: model.SignatureInfo.SignaturesEntry
	nil,                // 16: model.GetMultisigAddressByParticipantAddressesResponse.MultiSignatureAddressesEntry
	(*Pagination)(nil), // 17: model.Pagination
}
var file_model_multiSignature_proto_depIdxs = []int32{
	15, // 0: model.SignatureInfo.Signatures:type_name -> model.SignatureInfo.SignaturesEntry
	0,  // 1: model.PendingTransaction.Status:type_name -> model.PendingTransactionStatus
	0,  // 2: model.GetPendingTransactionsRequest.Status:type_name -> model.PendingTransactionStatus
	17, // 3: model.GetPendingTransactionsRequest.Pagination:type_name -> model.Pagination
	5,  // 4: model.GetPendingTransactionsResponse.PendingTransactions:type_name -> model.PendingTransaction
	5,  // 5: model.GetPendingTransactionDetailByTransactionHashResponse.PendingTransaction:type_name -> model.PendingTransaction
	4,  // 6: model.GetPendingTransactionDetailByTransactionHashResponse.PendingSignatures:type_name -> model.PendingSignature
	1,  // 7: model.GetPendingTransactionDetailByTransactionHashResponse.MultiSignatureInfo:type_name -> model.MultiSignatureInfo
	17, // 8: model.GetMultisignatureInfoRequest.Pagination:type_name -> model.Pagination
	1,  // 9: model.GetMultisignatureInfoResponse.MultisignatureInfo:type_name -> model.MultiSignatureInfo
	17, // 10: model.GetMultisigAddressByParticipantAddressesRequest.Pagination:type_name -> model.Pagination
	16, // 11: model.GetMultisigAddressByParticipantAddressesResponse.MultiSignatureAddresses:type_name -> model.GetMultisigAddressByParticipantAddressesResponse.MultiSignatureAddressesEntry
	13, // 12: model.GetMultisigAddressByParticipantAddressesResponse.MultiSignatureAddressesEntry.value:type_name -> model.addresses
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_model_multiSignature_proto_init() }
func file_model_multiSignature_proto_init() {
	if File_model_multiSignature_proto != nil {
		return
	}
	file_model_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_model_multiSignature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSignatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSignatureParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTransactionDetailByTransactionHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTransactionDetailByTransactionHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultisignatureInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultisignatureInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultisigAddressByParticipantAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Addresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_multiSignature_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultisigAddressByParticipantAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_multiSignature_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_multiSignature_proto_goTypes,
		DependencyIndexes: file_model_multiSignature_proto_depIdxs,
		EnumInfos:         file_model_multiSignature_proto_enumTypes,
		MessageInfos:      file_model_multiSignature_proto_msgTypes,
	}.Build()
	File_model_multiSignature_proto = out.File
	file_model_multiSignature_proto_rawDesc = nil
	file_model_multiSignature_proto_goTypes = nil
	file_model_multiSignature_proto_depIdxs = nil
}
